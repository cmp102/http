name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: create bin dir
      run: mkdir ./bin
      
    - name: Build windows
      run: GOOS=windows GOARCH=amd64 go build -o ./bin/http-windows-x64.exe main.go
      
    - name: Build linux
      run: GOOS=linux GOARCH=amd64 go build -o ./bin/http-linux-x64 main.go
      
    - name: Build macos
      run: GOOS=darwin GOARCH=amd64 go build -o ./bin/http-macos-x64 main.go

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ github.sha }}
        tag_name: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/http-windows-x64.exe
        asset_name: http-windows-x64.exe
        asset_content_type: application/octet-stream

    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/http-linux-x64
        asset_name: http-linux-x64
        asset_content_type: application/octet-stream

    - name: upload macos artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/http-macos-x64
        asset_name: http-macos-x64
        asset_content_type: application/octet-stream
